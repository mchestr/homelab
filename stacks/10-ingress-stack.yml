version: '3.4'
services:
  proxy:
    image: traefik:v2.1.2
    command:
    - "--api"
    - "--entrypoints.http.address=:80"
    - "--entrypoints.https.address=:443"
    - "--entrypoints.metrics.address=:8080"
    - "--entrypoints.mqtts.address=:8883"
    - "--entrypoints.psql.address=:5432"
    - "--providers.docker"
    - "--providers.docker.exposedByDefault=false"
    - "--providers.docker.network=proxy"
    - "--providers.docker.swarmmode"
    - "--providers.docker.watch"
    - "--certificatesResolvers.le.acme.email=${SMTP_EMAIL}"
    - "--certificatesResolvers.le.acme.storage=/etc/traefik/acme/acme.json"
    - "--certificatesResolvers.le.acme.dnsChallenge.provider=gandiv5"
    - "--metrics=true"
    - "--metrics.prometheus=true"
    - "--metrics.prometheus.entryPoint=metrics"
    - "--accesslog=true"
    ports:
    - 80:80
    - 443:443
    - 8080:8080
    - 8883:8883
    - 5432:5432
    secrets:
    - source: gandi_api_key.v1
      target: gandi_api_key
    environment:
    - GANDIV5_API_KEY_FILE=/run/secrets/gandi_api_key
    networks:
    - proxy
    volumes:
    - "/var/run/docker.sock:/var/run/docker.sock:ro"
    - traefik:/etc/traefik/acme
    deploy:
      mode: global
      labels:
      - traefik.enable=true
      # Global Redirect to HTTPS
      - traefik.http.routers.http-catchall.rule=hostregexp(`{host:.+}`)
      - traefik.http.routers.http-catchall.entrypoints=http
      - traefik.http.routers.http-catchall.middlewares=redirect-to-https

      # Traefik frontend UI and cert request labels
      - traefik.http.routers.api.rule=Host(`proxy.${SUBDOMAIN}`)
      - traefik.http.routers.api.service=api@internal
      - traefik.http.routers.api.entrypoints=https
      - traefik.http.routers.api.middlewares=auth-proxy
      - traefik.http.routers.api.tls=true
      - traefik.http.routers.api.tls.certresolver=le
      - traefik.http.routers.api.tls.domains[0].main=${SUBDOMAIN}
      - traefik.http.routers.api.tls.domains[0].sans=*.${SUBDOMAIN}

      - traefik.http.routers.metrics.rule=Host(`proxy.${SUBDOMAIN}`) && PathPrefix(`/metrics`)
      - traefik.http.routers.metrics.entrypoints=metrics
      - traefik.http.routers.metrics.middlewares=auth-proxy
      - traefik.http.routers.metrics.tls=true
      - traefik.http.routers.metrics.service=metrics
      - traefik.http.services.metrics.loadbalancer.server.port=8080

      # middleware redirect
      - traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https
      - traefik.http.middlewares.auth-proxy.basicauth.users=${TRAEFIK_PROXY_CREDENTIALS}
      placement:
        constraints:
        - node.role == manager
      restart_policy:
        condition: on-failure
        delay: 5s
      update_config:
        parallelism: 2
        delay: 10s
        order: start-first
        failure_action: rollback
    logging:
      driver: ${LOGGING_DRIVER:?not set}
secrets:
  gandi_api_key.v1:
    file: ./secrets/gandi_api_key
networks:
  proxy:
    external: true
volumes:
  traefik:
