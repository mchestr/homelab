version: '3.4'
services:
  influxdb:
    image: influxdb
    volumes:
    - influxdb_data:/var/lib/influxdb
    environment:
    - INFLUXDB_HTTP_AUTH_ENABLED=true
    - INFLUXDB_ADMIN_USER
    - INFLUXDB_ADMIN_PASSWORD
    - INFLUXDB_READ_USER
    - INFLUXDB_READ_USER_PASSWORD
    - INFLUXDB_WRITE_USER=${INFLUXDB_TELEGRAF_USER}
    - INFLUXDB_WRITE_USER_PASSWORD=${INFLUXDB_TELEGRAF_PASSWORD}
    networks:
    - database
    deploy:
      replicas: 1
      placement:
        constraints:
        - node.role == manager
      update_config:
        parallelism: 2
        delay: 10s
        order: start-first
        failure_action: rollback
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      labels:
      - traefik.enable=true
      - traefik.http.services.influx.loadbalancer.server.port=8086
      - traefik.http.routers.influx.entrypoints=influx
      - "traefik.http.routers.influx.rule=Host(`influxdb.${SUBDOMAIN}`)"
      - "traefik.http.routers.influx.tls=true"
      - "traefik.http.routers.influx.tls.certresolver=le"
    logging:
      driver: ${LOGGING_DRIVER:?not set}
  postgresql:
    image: postgres:11.2-alpine
    environment:
      POSTGRES_DB_FILE: /run/secrets/db
      POSTGRES_USER_FILE: /run/secrets/db_user
      POSTGRES_PASSWORD_FILE: /run/secrets/db_password
    networks:
    - database
    volumes:
    - postgresql_data:/var/lib/postgresql
    configs:
    - source: postgres_init.v1
      target: /docker-entrypoint-initdb.d/postgres_init.sh
      mode: 0777
    secrets:
    - source: postgresql_db.v1
      target: db
    - source: postgresql_user.v1
      target: db_user
    - source: postgresql_password.v1
      target: db_password
    - source: postgresql_grafana_user.v1
      target: postgresql_grafana_user
    - source: postgresql_grafana_password.v1
      target: postgresql_grafana_password
    deploy:
      replicas: 1
      update_config:
        parallelism: 2
        delay: 10s
        order: start-first
        failure_action: rollback
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      labels:
      - traefik.enable=true
      - traefik.tcp.services.psql.loadbalancer.server.port=5432
      - traefik.tcp.routers.psql.entrypoints=psql
      - traefik.tcp.routers.psql.rule=HostSNI(`psql.${SUBDOMAIN}`)
    logging:
      driver: ${LOGGING_DRIVER:?not set}
configs:
  postgres_init.v1:
    file: ./configs/postgres_init.sh
volumes:
  influxdb_data:
  postgresql_data:
secrets:
  postgresql_db.v1:
    file: ./secrets/postgresql_db
  postgresql_user.v1:
    file: ./secrets/postgresql_user
  postgresql_password.v1:
    file: ./secrets/postgresql_password
  postgresql_grafana_user.v1:
    file: ./secrets/postgresql_grafana_user
  postgresql_grafana_password.v1:
    file: ./secrets/postgresql_grafana_password
networks:
  database:
    external: true
