version: '3.4'
services:
  prometheus:
    image: prom/prometheus:v2.15.2
    volumes:
      - prometheus:/prometheus
    networks:
    - proxy
    secrets:
    - source: traefik_proxy_password.v1
      target: traefik_proxy_password
    configs:
    - source: prometheus.yml.v2
      target: /etc/prometheus/prometheus.yml
    deploy:
      replicas: 1
      placement:
        constraints:
        - node.role == manager
      labels:
      - traefik.enable=true
      - traefik.http.routers.prometheus.rule=Host(`prometheus.${SUBDOMAIN}`)
      - traefik.http.routers.prometheus.entrypoints=https
      - traefik.http.routers.prometheus.tls=true
      - traefik.http.routers.prometheus.middlewares=auth-prometheus
      - traefik.http.services.prometheus.loadbalancer.server.port=9090
      - traefik.http.middlewares.auth-prometheus.basicauth.users=${TRAEFIK_PROMETHEUS_CREDENTIALS}
      update_config:
        parallelism: 2
        delay: 10s
        order: start-first
        failure_action: rollback
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    logging:
      driver: ${LOGGING_DRIVER:?not set}
  portainer:
    image: portainer/portainer
    command: -H tcp://tasks.agent:9001 --tlsskipverify
    volumes:
    - portainer:/data
    networks:
    - portainer_agent
    - proxy
    deploy:
      replicas: 1
      placement:
        constraints:
        - node.role == manager
      labels:
      - traefik.enable=true
      - traefik.http.routers.portainer.rule=Host(`portainer.${SUBDOMAIN}`)
      - traefik.http.routers.portainer.entrypoints=https
      - traefik.http.routers.portainer.tls=true
      - traefik.http.services.portainer.loadbalancer.server.port=9000
      update_config:
        parallelism: 2
        delay: 10s
        order: start-first
        failure_action: rollback
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    logging:
      driver: ${LOGGING_DRIVER:?not set}
  agent:
    image: portainer/agent
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock
    - /var/lib/docker/volumes:/var/lib/docker/volumes
    networks:
    - portainer_agent
    deploy:
      mode: global
      placement:
        constraints:
        - node.platform.os == linux
      update_config:
        delay: 10s
        failure_action: rollback
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    logging:
      driver: ${LOGGING_DRIVER:?not set}
configs:
  prometheus.yml.v2:
    file: ./configs/prometheus.yml
secrets:
  traefik_proxy_password.v1:
    file: ./secrets/traefik_proxy_password
networks:
  proxy:
    external: true
  portainer_agent:
    external: true
volumes:
  portainer:
  prometheus:
